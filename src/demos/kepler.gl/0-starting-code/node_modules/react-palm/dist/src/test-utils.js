"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function makeForkUtil(reducer, createStore) {
    // this lets us more eligantly handle tests with dependant setups
    var FORK_RESET_STATE = Symbol('FORK_RESET_STATE');
    var augmentedReducer = function (state, action) {
        if (action.type === FORK_RESET_STATE) {
            return action.state;
        }
        return reducer(state, action);
    };
    var store = createStore(augmentedReducer);
    var fork = function (firstFn) {
        var restFns = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            restFns[_i - 1] = arguments[_i];
        }
        var state = store.getState();
        firstFn();
        restFns.forEach(function (fn) {
            store.dispatch({ type: FORK_RESET_STATE, state: state });
            fn();
        });
    };
    return { store: store, fork: fork };
}
exports.makeForkUtil = makeForkUtil;
//# sourceMappingURL=test-utils.js.map