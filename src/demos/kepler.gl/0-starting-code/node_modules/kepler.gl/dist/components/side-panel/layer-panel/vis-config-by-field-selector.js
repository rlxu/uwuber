'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2; // Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledComponents = require('../../common/styled-components');

var _fieldSelector = require('../../common/field-selector');

var _fieldSelector2 = _interopRequireDefault(_fieldSelector);

var _infoHelper = require('../../common/info-helper');

var _infoHelper2 = _interopRequireDefault(_infoHelper);

var _dimensionScaleSelector = require('./dimension-scale-selector');

var _dimensionScaleSelector2 = _interopRequireDefault(_dimensionScaleSelector);

var _utils = require('../../../utils/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VisConfigByFieldSelector = (_temp2 = _class = function (_Component) {
  (0, _inherits3.default)(VisConfigByFieldSelector, _Component);

  function VisConfigByFieldSelector() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, VisConfigByFieldSelector);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = VisConfigByFieldSelector.__proto__ || Object.getPrototypeOf(VisConfigByFieldSelector)).call.apply(_ref, [this].concat(args))), _this), _this._updateVisByField = function (val) {
      _this.props.updateField(val);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(VisConfigByFieldSelector, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          property = _props.property,
          showScale = _props.showScale,
          selectedField = _props.selectedField,
          description = _props.description,
          _props$scaleOptions = _props.scaleOptions,
          scaleOptions = _props$scaleOptions === undefined ? [] : _props$scaleOptions;


      return _react2.default.createElement(
        _styledComponents.SidePanelSection,
        null,
        _react2.default.createElement(
          _styledComponents.SidePanelSection,
          null,
          _react2.default.createElement(
            _styledComponents.PanelLabelWrapper,
            null,
            _react2.default.createElement(
              _styledComponents.PanelLabel,
              null,
              this.props.label || (0, _utils.capitalizeFirstLetter)(property) + ' based on'
            ),
            description && _react2.default.createElement(_infoHelper2.default, {
              description: description,
              id: this.props.id + '-' + property
            })
          ),
          _react2.default.createElement(_fieldSelector2.default, {
            fields: this.props.fields,
            value: selectedField && selectedField.name,
            onSelect: this._updateVisByField,
            erasable: true
          })
        ),
        _react2.default.createElement(
          'div',
          null,
          showScale ? _react2.default.createElement(_dimensionScaleSelector2.default, {
            scaleType: this.props.scaleType,
            options: scaleOptions,
            label: property + ' scale',
            onSelect: this.props.updateScale,
            disabled: scaleOptions.length < 2
          }) : null
        )
      );
    }
  }]);
  return VisConfigByFieldSelector;
}(_react.Component), _class.propTypes = {
  channel: _propTypes2.default.string.isRequired,
  domain: _propTypes2.default.arrayOf(_propTypes2.default.any).isRequired,
  fields: _propTypes2.default.arrayOf(_propTypes2.default.any).isRequired,
  id: _propTypes2.default.string.isRequired,
  property: _propTypes2.default.string.isRequired,
  scaleType: _propTypes2.default.string.isRequired,
  showScale: _propTypes2.default.bool.isRequired,
  updateField: _propTypes2.default.func.isRequired,
  updateScale: _propTypes2.default.func.isRequired,

  // optional
  selectedField: _propTypes2.default.object,
  description: _propTypes2.default.string,
  label: _propTypes2.default.string
}, _temp2);
exports.default = VisConfigByFieldSelector;
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpZGUtcGFuZWwvbGF5ZXItcGFuZWwvdmlzLWNvbmZpZy1ieS1maWVsZC1zZWxlY3Rvci5qcyJdLCJuYW1lcyI6WyJWaXNDb25maWdCeUZpZWxkU2VsZWN0b3IiLCJfdXBkYXRlVmlzQnlGaWVsZCIsInByb3BzIiwidXBkYXRlRmllbGQiLCJ2YWwiLCJwcm9wZXJ0eSIsInNob3dTY2FsZSIsInNlbGVjdGVkRmllbGQiLCJkZXNjcmlwdGlvbiIsInNjYWxlT3B0aW9ucyIsImxhYmVsIiwiaWQiLCJmaWVsZHMiLCJuYW1lIiwic2NhbGVUeXBlIiwidXBkYXRlU2NhbGUiLCJsZW5ndGgiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJjaGFubmVsIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImRvbWFpbiIsImFycmF5T2YiLCJhbnkiLCJib29sIiwiZnVuYyIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7QUFDQTs7OztBQUVBOztBQUtBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0lBRXFCQSx3Qjs7Ozs7Ozs7Ozs7Ozs7d09Ba0JuQkMsaUIsR0FBb0IsZUFBTztBQUN6QixZQUFLQyxLQUFMLENBQVdDLFdBQVgsQ0FBdUJDLEdBQXZCO0FBQ0QsSzs7Ozs7NkJBRVE7QUFBQSxtQkFPSCxLQUFLRixLQVBGO0FBQUEsVUFFTEcsUUFGSyxVQUVMQSxRQUZLO0FBQUEsVUFHTEMsU0FISyxVQUdMQSxTQUhLO0FBQUEsVUFJTEMsYUFKSyxVQUlMQSxhQUpLO0FBQUEsVUFLTEMsV0FMSyxVQUtMQSxXQUxLO0FBQUEsdUNBTUxDLFlBTks7QUFBQSxVQU1MQSxZQU5LLHVDQU1VLEVBTlY7OztBQVNQLGFBQ0U7QUFBQywwQ0FBRDtBQUFBO0FBQ0U7QUFBQyw0Q0FBRDtBQUFBO0FBQ0U7QUFBQywrQ0FBRDtBQUFBO0FBQ0U7QUFBQywwQ0FBRDtBQUFBO0FBQ0csbUJBQUtQLEtBQUwsQ0FBV1EsS0FBWCxJQUF1QixrQ0FBc0JMLFFBQXRCLENBQXZCO0FBREgsYUFERjtBQUlHRywyQkFDQyw4QkFBQyxvQkFBRDtBQUNFLDJCQUFhQSxXQURmO0FBRUUsa0JBQU8sS0FBS04sS0FBTCxDQUFXUyxFQUFsQixTQUF3Qk47QUFGMUI7QUFMSixXQURGO0FBWUUsd0NBQUMsdUJBQUQ7QUFDRSxvQkFBUSxLQUFLSCxLQUFMLENBQVdVLE1BRHJCO0FBRUUsbUJBQU9MLGlCQUFpQkEsY0FBY00sSUFGeEM7QUFHRSxzQkFBVSxLQUFLWixpQkFIakI7QUFJRTtBQUpGO0FBWkYsU0FERjtBQW9CRTtBQUFBO0FBQUE7QUFDR0ssc0JBQ0MsOEJBQUMsZ0NBQUQ7QUFDRSx1QkFBVyxLQUFLSixLQUFMLENBQVdZLFNBRHhCO0FBRUUscUJBQVNMLFlBRlg7QUFHRSxtQkFBVUosUUFBVixXQUhGO0FBSUUsc0JBQVUsS0FBS0gsS0FBTCxDQUFXYSxXQUp2QjtBQUtFLHNCQUFVTixhQUFhTyxNQUFiLEdBQXNCO0FBTGxDLFlBREQsR0FRRztBQVROO0FBcEJGLE9BREY7QUFrQ0Q7OztFQWpFbURDLGdCLFVBQzdDQyxTLEdBQVk7QUFDakJDLFdBQVNDLG9CQUFVQyxNQUFWLENBQWlCQyxVQURUO0FBRWpCQyxVQUFRSCxvQkFBVUksT0FBVixDQUFrQkosb0JBQVVLLEdBQTVCLEVBQWlDSCxVQUZ4QjtBQUdqQlYsVUFBUVEsb0JBQVVJLE9BQVYsQ0FBa0JKLG9CQUFVSyxHQUE1QixFQUFpQ0gsVUFIeEI7QUFJakJYLE1BQUlTLG9CQUFVQyxNQUFWLENBQWlCQyxVQUpKO0FBS2pCakIsWUFBVWUsb0JBQVVDLE1BQVYsQ0FBaUJDLFVBTFY7QUFNakJSLGFBQVdNLG9CQUFVQyxNQUFWLENBQWlCQyxVQU5YO0FBT2pCaEIsYUFBV2Msb0JBQVVNLElBQVYsQ0FBZUosVUFQVDtBQVFqQm5CLGVBQWFpQixvQkFBVU8sSUFBVixDQUFlTCxVQVJYO0FBU2pCUCxlQUFhSyxvQkFBVU8sSUFBVixDQUFlTCxVQVRYOztBQVdqQjtBQUNBZixpQkFBZWEsb0JBQVVRLE1BWlI7QUFhakJwQixlQUFhWSxvQkFBVUMsTUFiTjtBQWNqQlgsU0FBT1Usb0JBQVVDO0FBZEEsQztrQkFEQXJCLHdCO0FBa0VwQiIsImZpbGUiOiJ2aXMtY29uZmlnLWJ5LWZpZWxkLXNlbGVjdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQge1xuICBQYW5lbExhYmVsLFxuICBQYW5lbExhYmVsV3JhcHBlcixcbiAgU2lkZVBhbmVsU2VjdGlvblxufSBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgRmllbGRTZWxlY3RvciBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9maWVsZC1zZWxlY3Rvcic7XG5pbXBvcnQgSW5mb0hlbHBlciBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9pbmZvLWhlbHBlcic7XG5pbXBvcnQgRGltZW5zaW9uU2NhbGVTZWxlY3RvciBmcm9tICcuL2RpbWVuc2lvbi1zY2FsZS1zZWxlY3Rvcic7XG5pbXBvcnQge2NhcGl0YWxpemVGaXJzdExldHRlcn0gZnJvbSAndXRpbHMvdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaXNDb25maWdCeUZpZWxkU2VsZWN0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGNoYW5uZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBkb21haW46IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5hbnkpLmlzUmVxdWlyZWQsXG4gICAgZmllbGRzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuYW55KS5pc1JlcXVpcmVkLFxuICAgIGlkOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgcHJvcGVydHk6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBzY2FsZVR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBzaG93U2NhbGU6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gICAgdXBkYXRlRmllbGQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgdXBkYXRlU2NhbGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG5cbiAgICAvLyBvcHRpb25hbFxuICAgIHNlbGVjdGVkRmllbGQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgZGVzY3JpcHRpb246IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbGFiZWw6IFByb3BUeXBlcy5zdHJpbmdcbiAgfTtcblxuICBfdXBkYXRlVmlzQnlGaWVsZCA9IHZhbCA9PiB7XG4gICAgdGhpcy5wcm9wcy51cGRhdGVGaWVsZCh2YWwpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBwcm9wZXJ0eSxcbiAgICAgIHNob3dTY2FsZSxcbiAgICAgIHNlbGVjdGVkRmllbGQsXG4gICAgICBkZXNjcmlwdGlvbixcbiAgICAgIHNjYWxlT3B0aW9ucyA9IFtdXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFNpZGVQYW5lbFNlY3Rpb24+XG4gICAgICAgIDxTaWRlUGFuZWxTZWN0aW9uPlxuICAgICAgICAgIDxQYW5lbExhYmVsV3JhcHBlcj5cbiAgICAgICAgICAgIDxQYW5lbExhYmVsPlxuICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5sYWJlbCB8fCBgJHtjYXBpdGFsaXplRmlyc3RMZXR0ZXIocHJvcGVydHkpfSBiYXNlZCBvbmB9XG4gICAgICAgICAgICA8L1BhbmVsTGFiZWw+XG4gICAgICAgICAgICB7ZGVzY3JpcHRpb24gJiYgKFxuICAgICAgICAgICAgICA8SW5mb0hlbHBlclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICBpZD17YCR7dGhpcy5wcm9wcy5pZH0tJHtwcm9wZXJ0eX1gfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L1BhbmVsTGFiZWxXcmFwcGVyPlxuICAgICAgICAgIDxGaWVsZFNlbGVjdG9yXG4gICAgICAgICAgICBmaWVsZHM9e3RoaXMucHJvcHMuZmllbGRzfVxuICAgICAgICAgICAgdmFsdWU9e3NlbGVjdGVkRmllbGQgJiYgc2VsZWN0ZWRGaWVsZC5uYW1lfVxuICAgICAgICAgICAgb25TZWxlY3Q9e3RoaXMuX3VwZGF0ZVZpc0J5RmllbGR9XG4gICAgICAgICAgICBlcmFzYWJsZVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvU2lkZVBhbmVsU2VjdGlvbj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICB7c2hvd1NjYWxlID8gKFxuICAgICAgICAgICAgPERpbWVuc2lvblNjYWxlU2VsZWN0b3JcbiAgICAgICAgICAgICAgc2NhbGVUeXBlPXt0aGlzLnByb3BzLnNjYWxlVHlwZX1cbiAgICAgICAgICAgICAgb3B0aW9ucz17c2NhbGVPcHRpb25zfVxuICAgICAgICAgICAgICBsYWJlbD17YCR7cHJvcGVydHl9IHNjYWxlYH1cbiAgICAgICAgICAgICAgb25TZWxlY3Q9e3RoaXMucHJvcHMudXBkYXRlU2NhbGV9XG4gICAgICAgICAgICAgIGRpc2FibGVkPXtzY2FsZU9wdGlvbnMubGVuZ3RoIDwgMn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9TaWRlUGFuZWxTZWN0aW9uPlxuICAgICk7XG4gIH1cbn07XG4iXX0=